<?php

namespace Braindigit\UserBundle\Entity;

use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;

/**
 * GroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends EntityRepository
{
    /**
     * example:
     * $conditions = array(
     *      array(
     *          'field' => 'name',
     *          'operator' => 'contains',
     *          'value' => 'jon'
     *      ),
     *      array(
     *      )
     * )
     * $orderings = array (
     *      ['field' => 'field1', 'order' => 'ASC'],
     *      ['field' => 'field2', 'order' => 'DESC'],
     * )
     * @param array $conditions
     * @param array $orderings
     * @param int $limit
     * @param int $offset
     * @return array
     */
    public function findAllGroups(array $conditions = [], array $orderings = [], $limit = 10, $offset = 0)
    {
        $criteria = Criteria::create();
        $orderBy = [];
        foreach($orderings as $ordering) {
            $orderBy[$ordering['field']] = $ordering['order'];
        }
        if(count($orderBy) > 0) {
            $criteria->orderBy($orderBy);
        }
        if(!is_null($limit)) {
            $criteria->setMaxResults($limit);
        }
        if(!is_null($offset)) {
            $criteria->setFirstResult($offset);
        }
        if(count($conditions) > 0) {
            $expr = Criteria::expr();
            foreach($conditions as $condition) {
                if(!is_array($condition) || count($condition) != 3) {
                    continue;
                }
                $criteria->andWhere($expr->{$condition['operator']}($condition['field'], $condition['value']));
            }
        }
        return $this->matching($criteria);
    }
}
